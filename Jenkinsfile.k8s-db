pipeline {
    agent any
    
    stages {
        stage('Deploy with Minikube') {
            steps {
                script {
                    echo 'Usando Minikube kubectl para el despliegue...'
                    
                    // Aplicar todos los recursos
                    bat '''
                        minikube kubectl -- apply -f mysql-secret.yaml
                        minikube kubectl -- apply -f mysql-configmap.yaml
                        minikube kubectl -- apply -f mysql-pvc.yaml
                        minikube kubectl -- apply -f mysql-deployment.yaml
                        minikube kubectl -- apply -f mysql-service.yaml
                    '''
                }
            }
        }
        
        stage('Verify with Minikube') {
            steps {
                script {
                    timeout(time: 5, unit: 'MINUTES') {
                        waitUntil {
                            def status = bat(
                                script: 'minikube kubectl -- get pods -l app=mysql -o jsonpath="{.items[0].status.phase}"',
                                returnStdout: true
                            ).trim()
                            
                            echo "Estado: ${status}"
                            return status == "Running"
                        }
                    }
                    
                    bat '''
                        echo Pods:
                        minikube kubectl -- get pods -l app=mysql
                        echo Services:
                        minikube kubectl -- get svc mysql-service
                        echo PVCs:
                        minikube kubectl -- get pvc
                    '''
                }
            }
        }
    }
    
    post {
        success {
            echo '✅ MySQL desplegado con Minikube!'
        }
        failure {
            echo '❌ Error en el despliegue con Minikube'
        }
    }
}